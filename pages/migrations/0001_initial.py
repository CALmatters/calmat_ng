# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-05-27 00:22
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('business', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('categories', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('description', models.TextField(blank=True, default=b'', max_length=135, verbose_name=b'Description (135 Chars)')),
                ('slug', models.CharField(blank=True, help_text='Leave blank to have the URL auto-generated from the title.', max_length=2000, null=True, verbose_name='URL')),
                ('status', models.IntegerField(choices=[(1, 'Draft'), (2, 'Published')], default=2, help_text='With Draft chosen, will only be shown for admin users on the site.', verbose_name='Status')),
                ('publish_date', models.DateTimeField(blank=True, help_text="With Published chosen, won't be shown until this time", null=True, verbose_name='Published from')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('content', models.TextField(verbose_name='Content')),
                ('custom_post_type', models.CharField(choices=[(b'articles', b'Articles'), (b'expertperspectives', b'Expert Perspectives'), (b'external', b'External Link'), (b'press', b'Press Release'), (b'readerreactions', b'Reader Reactions'), (b'updates', b'Updates')], default=b'articles', max_length=30, verbose_name='Content Type')),
                ('news_analysis', models.BooleanField(default=False, help_text=b'Check this box if this article should display in the POLITICS Menu', verbose_name='Politics')),
                ('layout', models.CharField(choices=[(b'sidebar', b'Sidebar'), (b'singlecolumn', b'Single Column')], default=b'sidebar', max_length=30, verbose_name='Layout')),
                ('social_title', models.CharField(blank=True, default=b'', help_text=b'Title used when submitting article to social sites.', max_length=200, verbose_name='Social Sharing Title')),
                ('custom_source', models.CharField(blank=True, default=b'', max_length=255, verbose_name='External Source')),
                ('custom_link', models.CharField(blank=True, max_length=1200, verbose_name='External Link')),
                ('guest_author', models.CharField(blank=True, default=b'', help_text=b'*Guest Author* will be prepend regular Authors selected above.', max_length=100, verbose_name=b'Guest Author')),
                ('headline_layout', models.CharField(choices=[(b'below', b'Below Image'), (b'below_big', b'Below Image - Big'), (b'over', b'Over Image'), (b'above', b'Above Image')], default=b'below', max_length=30, verbose_name='Headline Layout')),
                ('featured_image', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to=b'posts/', verbose_name='Featured Image')),
                ('featured_image_title_position', models.CharField(choices=[(b'topleft', b'Top-Left'), (b'topright', b'Top-Right'), (b'bottomleft', b'Bottom-Left'), (b'bottomright', b'Bottom-Right')], default=b'topleft', max_length=30, verbose_name='Position')),
                ('featured_image_title_shade', models.CharField(choices=[(b'dark', b'Dark'), (b'light', b'Light')], default=b'dark', max_length=30, verbose_name='Shade')),
                ('featured_image_description', models.CharField(blank=True, default=b'', max_length=255, verbose_name='Image Description')),
                ('featured_image_credit', models.CharField(blank=True, default=b'', max_length=255, verbose_name='Image Credit')),
                ('facebook_share_image', versatileimagefield.fields.VersatileImageField(blank=True, help_text=b'Image size should be 600 x 315 for best results (or 1200 x 630 for high resolution)', null=True, upload_to=b'posts/', verbose_name='Facebook Share Image')),
                ('show_subscription_form', models.BooleanField(default=True, verbose_name='Show Subscription Form')),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ('order',),
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
            },
        ),
        migrations.CreateModel(
            name='Atom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('description', models.TextField(blank=True, default=b'', max_length=135, verbose_name=b'Description (135 Chars)')),
                ('slug', models.CharField(blank=True, help_text='Leave blank to have the URL auto-generated from the title.', max_length=2000, null=True, verbose_name='URL')),
                ('status', models.IntegerField(choices=[(1, 'Draft'), (2, 'Published')], default=2, help_text='With Draft chosen, will only be shown for admin users on the site.', verbose_name='Status')),
                ('publish_date', models.DateTimeField(blank=True, help_text="With Published chosen, won't be shown until this time", null=True, verbose_name='Published from')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('content', models.TextField(verbose_name='Content')),
                ('headline', models.CharField(blank=True, help_text=b'The displayed headline for this atom when viewed as a piece of content.', max_length=200)),
                ('default_display_type', models.CharField(choices=[(b'image', b'Image Only'), (b'text', b'Headline and Text')], default=b'text', help_text=b'When inserted into articles, atoms will appear as either the featured image,or the headline and content. This can be overridden in the parent article.', max_length=10)),
                ('featured_image', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to=b'atoms/', verbose_name='Featured Image')),
                ('modal_layout', models.CharField(choices=[(b'featured_left', b'Featured Image Left'), (b'content_left', b'Content Left'), (b'content_html_left', b'Content + HTML Left'), (b'html_left', b'HTML Left')], default=b'featured_left', help_text=b'Choose what to show in the left side of a atom modal window.', max_length=20)),
                ('modal_layout_right', models.CharField(choices=[(b'desc_right', b'Description Right'), (b'content_right', b'Content Right'), (b'empty_right', b'Empty Right')], default=b'desc_right', help_text=b'Choose what to show in the right side of a atom modal window.', max_length=20)),
                ('embedded_content', models.TextField(blank=True, verbose_name='HTML and <iframe>')),
                ('categories', models.ManyToManyField(blank=True, related_name='atoms', to='categories.Category', verbose_name='Categories')),
                ('related_atoms', models.ManyToManyField(blank=True, related_name='related', to='pages.Atom', verbose_name='Related Atoms')),
            ],
            options={
                'verbose_name': 'Atom',
                'verbose_name_plural': 'Atoms',
            },
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('description', models.TextField(blank=True, default=b'', max_length=135, verbose_name=b'Description (135 Chars)')),
                ('slug', models.CharField(blank=True, help_text='Leave blank to have the URL auto-generated from the title.', max_length=2000, null=True, verbose_name='URL')),
                ('status', models.IntegerField(choices=[(1, 'Draft'), (2, 'Published')], default=2, help_text='With Draft chosen, will only be shown for admin users on the site.', verbose_name='Status')),
                ('publish_date', models.DateTimeField(blank=True, help_text="With Published chosen, won't be shown until this time", null=True, verbose_name='Published from')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('masthead_copy', models.CharField(default=b'A nonprofit, nonpartisan media venture producing compelling stories on policies, personalities and money in Sacramento.', help_text=b'Text displayed in top black bar for the homepage.', max_length=125)),
                ('works_display_one', models.CharField(blank=True, default=b'', max_length=20, verbose_name=b'Label')),
                ('works_url_one', models.CharField(blank=True, default=b'', help_text=b'A valid http:// or https:// link', max_length=20, verbose_name=b'URL')),
                ('works_display_two', models.CharField(blank=True, default=b'', max_length=20, verbose_name=b'Label')),
                ('works_url_two', models.CharField(blank=True, default=b'', help_text=b'A valid http:// or https:// link', max_length=20, verbose_name=b'URL')),
                ('works_display_three', models.CharField(blank=True, default=b'', max_length=20, verbose_name=b'Label')),
                ('works_url_three', models.CharField(blank=True, default=b'', help_text=b'A valid http:// or https:// link', max_length=20, verbose_name=b'URL')),
                ('works_display_four', models.CharField(blank=True, default=b'', max_length=20, verbose_name=b'Label')),
                ('works_url_four', models.CharField(blank=True, default=b'', help_text=b'A valid http:// or https:// link', max_length=20, verbose_name=b'URL')),
                ('works_display_five', models.CharField(blank=True, default=b'', max_length=20, verbose_name=b'Label')),
                ('works_url_five', models.CharField(blank=True, default=b'', help_text=b'A valid http:// or https:// link', max_length=20, verbose_name=b'URL')),
                ('primary_article', models.ForeignKey(help_text=b'Article displayed front and center, largest', on_delete=django.db.models.deletion.CASCADE, related_name='primary_on_homepages', to='pages.Article', verbose_name=b'Primary Article')),
                ('secondary_article_left', models.ForeignKey(help_text=b'Article displayed below primary article to the left', on_delete=django.db.models.deletion.CASCADE, related_name='secondary_left_on_homepages', to='pages.Article', verbose_name=b'Left Secondary Article')),
                ('secondary_article_right', models.ForeignKey(help_text=b'Article displayed below primary article to the right', on_delete=django.db.models.deletion.CASCADE, related_name='secondary_right_on_homepages', to='pages.Article', verbose_name=b'Right Secondary Article')),
                ('the_basics_four', models.ForeignKey(help_text=b'Four Article in the The Basics', on_delete=django.db.models.deletion.CASCADE, related_name='basics_four_on_homepages', to='pages.Article', verbose_name=b'Bottom Article in The Basics')),
                ('the_basics_one', models.ForeignKey(help_text=b'First Article in the The Basics', on_delete=django.db.models.deletion.CASCADE, related_name='basics_one_on_homepages', to='pages.Article', verbose_name=b'Top Article in The Basics')),
                ('the_basics_three', models.ForeignKey(help_text=b'Third Article in the The Basics', on_delete=django.db.models.deletion.CASCADE, related_name='basics_three_on_homepages', to='pages.Article', verbose_name=b'Third Article in The Basics')),
                ('the_basics_two', models.ForeignKey(help_text=b'Second Article in the The Basics', on_delete=django.db.models.deletion.CASCADE, related_name='basics_two_on_homepages', to='pages.Article', verbose_name=b'Second Article in The Basics')),
            ],
            options={
                'ordering': ('status',),
                'verbose_name': 'Home Page',
                'verbose_name_plural': 'Home Pages',
            },
        ),
        migrations.CreateModel(
            name='OnRamp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('description', models.TextField(blank=True, default=b'', max_length=135, verbose_name=b'Description (135 Chars)')),
                ('slug', models.CharField(blank=True, help_text='Leave blank to have the URL auto-generated from the title.', max_length=2000, null=True, verbose_name='URL')),
                ('content', models.TextField(verbose_name='Content')),
                ('custom_link', models.CharField(blank=True, default=b'', max_length=1200, verbose_name=b'More Link')),
            ],
            options={
                'ordering': ('title',),
                'verbose_name': 'OnRamp',
                'verbose_name_plural': 'OnRamps',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('description', models.TextField(blank=True, default=b'', max_length=135, verbose_name=b'Description (135 Chars)')),
                ('slug', models.CharField(blank=True, help_text='Leave blank to have the URL auto-generated from the title.', max_length=2000, null=True, verbose_name='URL')),
                ('status', models.IntegerField(choices=[(1, 'Draft'), (2, 'Published')], default=2, help_text='With Draft chosen, will only be shown for admin users on the site.', verbose_name='Status')),
                ('publish_date', models.DateTimeField(blank=True, help_text="With Published chosen, won't be shown until this time", null=True, verbose_name='Published from')),
                ('featured_image', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to=b'project_images/', verbose_name=b'Featured Image')),
                ('atom_layout', models.CharField(choices=[(b'image-headline', b'Image + Headline'), (b'image', b'Featured Image Only'), (b'atom-block', b'Atom Block'), (b'embedded', b'Embeded Content <iframe>')], default=b'image-headline', help_text=b'Atom layout', max_length=20)),
                ('storify_embed', models.TextField(blank=True, default=b'', verbose_name=b'Storify Embed')),
                ('order', models.PositiveIntegerField(default=0)),
                ('atom', models.ForeignKey(blank=True, help_text=b'Appears on the right.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projects_showing_atom', to='pages.Atom', verbose_name=b'Project Atom')),
                ('categories', models.ManyToManyField(blank=True, related_name='projects', to='categories.Category', verbose_name=b'Categories')),
            ],
            options={
                'ordering': ('order', '-publish_date'),
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
            },
        ),
        migrations.CreateModel(
            name='ProjectSortableExpertPerspectivesArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.Article')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.Project')),
            ],
            options={
                'ordering': ('order',),
                'verbose_name': 'Expert Perspective Article',
                'verbose_name_plural': 'Expert Perspectives Articles',
            },
        ),
        migrations.CreateModel(
            name='ProjectSortableFeaturedArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.Article')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.Project')),
            ],
            options={
                'ordering': ('order',),
                'verbose_name': 'Featured Article',
                'verbose_name_plural': 'Featured Articles',
            },
        ),
        migrations.CreateModel(
            name='ProjectSortablePartners',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='business.Partner')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.Project')),
            ],
            options={
                'ordering': ('order',),
                'verbose_name': 'Partner',
                'verbose_name_plural': 'Partners',
            },
        ),
        migrations.CreateModel(
            name='ProjectSortableQuotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.Project')),
            ],
            options={
                'ordering': ('order',),
                'verbose_name': 'Project Quote',
                'verbose_name_plural': 'Project Quotes',
            },
        ),
        migrations.CreateModel(
            name='ProjectSortableReaderReactionsArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.Article')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.Project')),
            ],
            options={
                'ordering': ('order',),
                'verbose_name': 'Reader Reaction Article',
                'verbose_name_plural': 'Reader Reactions Articles',
            },
        ),
        migrations.CreateModel(
            name='ProjectSortableRelatedArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.Article')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.Project')),
            ],
            options={
                'ordering': ('order',),
                'verbose_name': 'Related Article',
                'verbose_name_plural': 'Related Article',
            },
        ),
        migrations.CreateModel(
            name='ProjectSortableUpdatesArticles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.Article')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.Project')),
            ],
            options={
                'ordering': ('order',),
                'verbose_name': 'Update Articles',
                'verbose_name_plural': 'Updates Articles',
            },
        ),
        migrations.CreateModel(
            name='ProjectSortableVisualizations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('atom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.Atom')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.Project')),
            ],
            options={
                'ordering': ('order',),
                'verbose_name': 'Infograph',
                'verbose_name_plural': 'Infographs',
            },
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('description', models.TextField(blank=True, default=b'', max_length=135, verbose_name=b'Description (135 Chars)')),
                ('slug', models.CharField(blank=True, help_text='Leave blank to have the URL auto-generated from the title.', max_length=2000, null=True, verbose_name='URL')),
                ('content', models.TextField(verbose_name='Content')),
                ('attribution', models.CharField(blank=True, default=b'', max_length=255, verbose_name=b'Attribution')),
                ('custom_link', models.CharField(blank=True, default=b'', max_length=1200, verbose_name=b'More Link')),
            ],
            options={
                'ordering': ('title',),
                'verbose_name': 'Quote',
                'verbose_name_plural': 'Quotes',
            },
        ),
        migrations.CreateModel(
            name='RelatedArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='main_post', to='pages.Article')),
                ('related_article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_post', to='pages.Article')),
            ],
            options={
                'verbose_name': 'Related Article',
                'verbose_name_plural': 'Related Articles',
            },
        ),
        migrations.AddField(
            model_name='projectsortablequotes',
            name='quote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pages.Quote'),
        ),
        migrations.AddField(
            model_name='project',
            name='expert_perspectives_articles',
            field=models.ManyToManyField(blank=True, related_name='projects_showing_article_as_expert_perspective', through='pages.ProjectSortableExpertPerspectivesArticle', to='pages.Article', verbose_name=b'Expert Perspectives Articles'),
        ),
        migrations.AddField(
            model_name='project',
            name='features',
            field=models.ManyToManyField(blank=True, related_name='projects_showing_article_as_feature', through='pages.ProjectSortableFeaturedArticle', to='pages.Article', verbose_name=b'Featured Articles'),
        ),
        migrations.AddField(
            model_name='project',
            name='onramp',
            field=models.ForeignKey(blank=True, help_text=b'Appears on the left.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projects_showing_onramp', to='pages.OnRamp', verbose_name=b'Project OnRamp'),
        ),
        migrations.AddField(
            model_name='project',
            name='partners',
            field=models.ManyToManyField(blank=True, related_name='storypage_partners', through='pages.ProjectSortablePartners', to='business.Partner', verbose_name=b'Partners for project'),
        ),
        migrations.AddField(
            model_name='project',
            name='quotes',
            field=models.ManyToManyField(blank=True, related_name='projects_showing_quote', through='pages.ProjectSortableQuotes', to='pages.Quote', verbose_name=b'Quotes'),
        ),
        migrations.AddField(
            model_name='project',
            name='reader_reactions_articles',
            field=models.ManyToManyField(blank=True, related_name='projects_show_article_as_reader_reaction', through='pages.ProjectSortableReaderReactionsArticle', to='pages.Article', verbose_name=b'Reader Reactions Articles'),
        ),
        migrations.AddField(
            model_name='project',
            name='related_articles',
            field=models.ManyToManyField(blank=True, related_name='projects_showing_article_as_related', through='pages.ProjectSortableRelatedArticle', to='pages.Article', verbose_name=b'Related Articles'),
        ),
        migrations.AddField(
            model_name='project',
            name='updates_articles',
            field=models.ManyToManyField(blank=True, related_name='projects_showing_article_as_update', through='pages.ProjectSortableUpdatesArticles', to='pages.Article', verbose_name=b'Updates Articles'),
        ),
        migrations.AddField(
            model_name='project',
            name='visualizations',
            field=models.ManyToManyField(blank=True, related_name='visualizations', through='pages.ProjectSortableVisualizations', to='pages.Atom', verbose_name=b'Visualizations'),
        ),
        migrations.AddField(
            model_name='article',
            name='atoms',
            field=models.ManyToManyField(blank=True, related_name='blogposts', to='pages.Atom', verbose_name='Atoms'),
        ),
        migrations.AddField(
            model_name='article',
            name='authors',
            field=models.ManyToManyField(blank=True, help_text=b'Choices limited to users who are staff (is_staff=True).', related_name='authors_articles', to='business.Author', verbose_name='Author'),
        ),
        migrations.AddField(
            model_name='article',
            name='categories',
            field=models.ManyToManyField(blank=True, related_name='blogposts', to='categories.Category', verbose_name='Categories'),
        ),
        migrations.AddField(
            model_name='article',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name=b'Creator'),
        ),
        migrations.AddField(
            model_name='article',
            name='partners',
            field=models.ManyToManyField(blank=True, related_name='articles_by_partner', through='business.PartnerArticle', to='business.Partner', verbose_name='Partners'),
        ),
        migrations.AddField(
            model_name='article',
            name='related_posts',
            field=models.ManyToManyField(blank=True, related_name='contained_in_related', through='pages.RelatedArticle', to='pages.Article', verbose_name='Related Posts'),
        ),
    ]
